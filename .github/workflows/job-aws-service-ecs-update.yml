name: docker-build-pushs

on:
  workflow_call:

jobs:
  docker-build-push:
    runs-on: ubuntu-latest

    steps:
      - name: "Configure AWS Credentials"
  # You may pin to the exact commit or the version.
  # uses: aws-actions/configure-aws-credentials@04b98b3f9e85f563fb061be8751a0352327246b0
        uses: aws-actions/configure-aws-credentials@v3
        with:
            # AWS Region, e.g. us-east-2
            aws-region: us-west-2
            # The Amazon Resource Name (ARN) of the role to assume. Use the provided credentials to assume an IAM role and configure the Actions environment with the assumed role credentials rather than with the provided credentials.
            aws-access-key-id: ${{ secrets.AWS_ACCESS }}
            # AWS Secret Access Key. Required if aws-access-key-id is provided.
            aws-secret-access-key: ${{ secrets.AWS_SECRET }}
            # AWS Session Token.
            
      - name: Amazon ECS "Deploy Task Definition" Action for GitHub Actions
      # You may pin to the exact commit or the version.
      # uses: aws-actions/amazon-ecs-deploy-task-definition@df9643053eda01f169e64a0e60233aacca83799a
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          # The path to the ECS task definition file to register
          task-definition: terraformar/task_definition.json
          # The name of the ECS service to deploy to. The action will only register the task definition if no service is given.
          service: denzelrr-webservice-service-webservice
          # The name of the ECS service's cluster.  Will default to the 'default' cluster
          cluster: ecs-denzelrr-cluster
          force-new-deployment: true